name: pipeline2
on:
  workflow_dispatch:


permissions:
    contents: read
    checks: write
    
env:
  PATH_TO_MATLAB: "/mathworks/BGL/devel/sbs/37/vanshg.Bslcicd.j2291166/matlab/bin"

  
jobs:
  AHRS_Generate_Simulink_Web_View:
    runs-on: Linux
    #if: ${{ always() }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: check directories
        run: ls
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.GenerateSimulinkWebView|sl_model_file|ProcessAdvisorExample|02_Models/AHRS_Voter/specification/AHRS_Voter.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
             startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
         name: AHRS_Voter
         path: |
          04_Results/AHRS_Voter/webview 
          derived/artifacts.dmr    
          
  AHRS_Check_Modeling_Standards:
   runs-on: Linux

   needs: AHRS_Generate_Simulink_Web_View

   steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: check directories
        run: ls
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: AHRS_Voter
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.RunModelStandards|sl_model_file|ProcessAdvisorExample|02_Models/AHRS_Voter/specification/AHRS_Voter.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
             startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
         name: AHRS_Voter
         path: |
          04_Results/AHRS_Voter/model_standards_results  
          derived/artifacts.dmr    
   
   




   
  AHRS_Detect_Design_Errors:
   runs-on: Linux
   needs: AHRS_Check_Modeling_Standards

   steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: check directories
        run: ls
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: AHRS_Voter
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.DetectDesignErrors|sl_model_file|ProcessAdvisorExample|02_Models/AHRS_Voter/specification/AHRS_Voter.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
         name: AHRS_Voter
         path: |
          04_Results/AHRS_Voter/design_error_detections  
          derived/artifacts.dmr    
        
        
    
  AHRS_Generate_SDD_Report:
   runs-on: Linux
   needs: AHRS_Detect_Design_Errors
   steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: check directories
        run: ls
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: AHRS_Voter
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.GenerateSDDReport|sl_model_file|ProcessAdvisorExample|02_Models/AHRS_Voter/specification/AHRS_Voter.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
         name: AHRS_Voter
         path: |
          04_Results/AHRS_Voter/system_design_description  
          derived/artifacts.dmr  

  
         
  AHRS_Run_tests:
     runs-on: Linux
     needs: AHRS_Generate_SDD_Report
   
     steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: check directories
        run: ls
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: AHRS_Voter
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.RunTestsPerTestCase|sl_test_case|ProcessAdvisorExample|02_Models/AHRS_Voter/test_cases/AHRS_Voter_REQ_Based_Test.mldatx|ced877ff-cfb8-4fa8-9bbf-aaa29b1d926b','padv.builtin.task.RunTestsPerTestCase|sl_test_case|ProcessAdvisorExample|02_Models/AHRS_Voter/test_cases/AHRS_Voter_REQ_Based_Test.mldatx|d3a72cc8-687b-44ae-a909-7eff803b455b','padv.builtin.task.RunTestsPerTestCase|sl_test_case|ProcessAdvisorExample|02_Models/AHRS_Voter/test_cases/AHRS_Voter_REQ_Based_Test.mldatx|74194125-b632-41a1-b96d-b3364441277f'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
         name: AHRS_Voter
         path: |
          04_Results/test_results
          derived/artifacts.dmr  
          

          
          
  AHRS_Generate_Code:
   runs-on: Linux
   needs: AHRS_Run_tests
   steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: check directories
        run: ls
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: AHRS_Voter
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.GenerateCode|sl_model_file|ProcessAdvisorExample|02_Models/AHRS_Voter/specification/AHRS_Voter.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
         name: AHRS_Voter
         path: |
          03_Code
          derived/artifacts.dmr 
  
         
         
  AHRS_Check_Coding_Standards:
   runs-on: Linux
   needs: AHRS_Generate_Code
   steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: check directories
        run: ls
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: AHRS_Voter
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.AnalyzeModelCode|sl_model_file|ProcessAdvisorExample|02_Models/AHRS_Voter/specification/AHRS_Voter.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
         name: AHRS_Voter
         path: |
          04_Results/AHRS_Voter/coding_standards 
          derived/artifacts.dmr 

         
         
  AHRS_Inspect_Code:
   runs-on: Linux
   needs: AHRS_Check_Coding_Standards
   steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: check directories
        run: ls
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: AHRS_Voter
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.RunCodeInspection|sl_model_file|ProcessAdvisorExample|02_Models/AHRS_Voter/specification/AHRS_Voter.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
         name: AHRS_Voter
         path: |
          04_Results/AHRS_Voter/code_inspection
          derived/artifacts.dmr 
         
         
  AHRS_Merge_Tests_Results:
   runs-on: Linux
   needs: AHRS_Inspect_Code
   steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: check directories
        run: ls
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: AHRS_Voter
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.MergeTestResults|sl_model_file|ProcessAdvisorExample|02_Models/AHRS_Voter/specification/AHRS_Voter.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
         name: AHRS_Voter
         path: |
          04_Results/test_results
          derived/artifacts.dmr
         
  AHRS_Generate_PADV_Report:
   runs-on: Linux
   needs: AHRS_Merge_Tests_Results
   
   steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: check directories
        run: ls
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: AHRS_Voter
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd);rptObj=padv.ProcessAdvisorReportGenerator(Format='pdf', OutputPath='$PROJECTROOT$/ProcessAdvisorReport');rptObj.generateReport();" 
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          
         

  AHRS_Collect_Artifacts:
   runs-on: Linux

   needs: AHRS_Generate_PADV_Report
   steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: check directories
        run: ls
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: AHRS_Voter
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd); zippedFiles = padv.zipBuildArtifacts({'03_Code', '04_Results/AHRS_Voter/code_inspection', '04_Results/AHRS_Voter/coding_standards', '04_Results/AHRS_Voter/design_error_detections', '04_Results/AHRS_Voter/model_standards_results', '04_Results/AHRS_Voter/system_design_description', '04_Results/AHRS_Voter/webview','ProcessAdvisorReport.pdf'},'padv_artifacts_AHRS_Voter.zip');"
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
         name: padv_artifacts_AHRS_Voter
         path: |
          padv_artifacts_AHRS_Voter.zip

          
          
  Actuator_Control_Simulink_Web_View:
    runs-on: Linux
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: check directories
        run: ls
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.GenerateSimulinkWebView|sl_model_file|ProcessAdvisorExample|02_Models/Actuator_Control/specification/Actuator_Control.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
           name: Actuator_Control
           path: |
            04_Results/Actuator_Control/webview
            derived/artifacts.dmr
          
          
  Actuator_Control_Check_Modeling_Standards:
   runs-on: Linux
   needs: Actuator_Control_Simulink_Web_View
   steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2    
        with:
         name: Actuator_Control 
      - name: check directories
        run: ls
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.RunModelStandards|sl_model_file|ProcessAdvisorExample|02_Models/Actuator_Control/specification/Actuator_Control.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
           name: Actuator_Control
           path: |
            04_Results/Actuator_Control/model_standards_results
            derived/artifacts.dmr

          
  Actuator_Control_Detect_Design_Errors:

   runs-on: Linux
   needs: Actuator_Control_Check_Modeling_Standards
   steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2    
        with:
         name: Actuator_Control 
      - name: check directories
        run: ls
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.DetectDesignErrors|sl_model_file|ProcessAdvisorExample|02_Models/Actuator_Control/specification/Actuator_Control.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
           name: Actuator_Control
           path: |
            04_Results/Actuator_Control/design_error_detections
            derived/artifacts.dmr
        
        
        
  Actuator_Control_Generate_SDD_Report:

   runs-on: Linux
   needs: Actuator_Control_Detect_Design_Errors
   steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2    
        with:
         name: Actuator_Control 
      - name: check directories
        run: ls
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.GenerateSDDReport|sl_model_file|ProcessAdvisorExample|02_Models/Actuator_Control/specification/Actuator_Control.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
           name: Actuator_Control
           path: |
            04_Results/Actuator_Control/system_design_description
            derived/artifacts.dmr
        
   
         

          
          
  Actuator_Control_Generate_Code:
 
   runs-on: Linux
   needs: Actuator_Control_Generate_SDD_Report
   steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2    
        with:
         name: Actuator_Control 
      - name: check directories
        run: ls
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.GenerateCode|sl_model_file|ProcessAdvisorExample|02_Models/Actuator_Control/specification/Actuator_Control.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
           name: Actuator_Control
           path: |
            03_Code
            derived/artifacts.dmr
  
         
         
  Actuator_Control_Check_Coding_Standards:
   if: ${{ always() }}
   runs-on: Linux
   needs: Actuator_Control_Generate_Code
   steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2    
        with:
         name: Actuator_Control 
      - name: check directories
        run: ls
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.AnalyzeModelCode|sl_model_file|ProcessAdvisorExample|02_Models/Actuator_Control/specification/Actuator_Control.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
           name: Actuator_Control
           path: |
            04_Results/Actuator_Control/coding_standards
            derived/artifacts.dmr

 
         
         
  Actuator_Control_Inspect_Code:
  
   runs-on: Linux
   needs: Actuator_Control_Check_Coding_Standards
   steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2    
        with:
         name: Actuator_Control 
      - name: check directories
        run: ls
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.RunCodeInspection|sl_model_file|ProcessAdvisorExample|02_Models/Actuator_Control/specification/Actuator_Control.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
           name: Actuator_Control
           path: |
            04_Results/Actuator_Control/code_inspection
            derived/artifacts.dmr
 
         
     
         
  Actuator_Control_Generate_PADV_Report:
   runs-on: Linux

   needs: Actuator_Control_Inspect_Code
   steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: check directories
        run: ls
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: Actuator_Control
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd);rptObj=padv.ProcessAdvisorReportGenerator(Format='pdf', OutputPath='$PROJECTROOT$/ProcessAdvisorReport');rptObj.generateReport();" 
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log   
 

  Actuator_Control_Collect_Artifacts:
   runs-on: Linux

   needs: Actuator_Control_Generate_PADV_Report
   steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download Artifacts
        uses: actions/download-artifact@v2    
        with:
         name: Actuator_Control 
      - name: check directories
        run: ls
      - name: Run the matlab version
        run: |        
          export PATH="$PATH_TO_MATLAB:$PATH"
          echo "$PATH" >> $GITHUB_PATH 
      - name: check directories
        run: ls     
      - name: Launch project 1
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log    
        
        
      - name: Launch MATLAB
        uses: matlab-actions/run-command@v1
        with:
              command: "openProject(pwd); zippedFiles = padv.zipBuildArtifacts({'03_Code', '04_Results/Actuator_Control/code_inspection', '04_Results/Actuator_Control/coding_standards', '04_Results/Actuator_Control/design_error_detections', '04_Results/Actuator_Control/model_standards_results', '04_Results/Actuator_Control/system_design_description', '04_Results/Actuator_Control/webview',  'ProcessAdvisorReport.pdf'},'Actuator_Control_padv_artifacts.zip');"
              startup-options: -nodesktop -logfile output.log
             
      - name: Launch project 2
        uses: matlab-actions/run-command@v1
        with:
             command: "openProject(pwd);CheckActuatorExecution"
             startup-options: -nodesktop -logfile output.log          

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
         name: Actuator_Control_padv_artifacts
         path: |
          Actuator_Control_padv_artifacts.zip

          
#   IL_Generate_Simulink_Web_View:
#     runs-on: Linux
#     steps:
#         - name: Checkout repository
#           uses: actions/checkout@v2
#         - name: Run the matlab version
#           run: |
#             export PATH="$PATH_TO_MATLAB:$PATH"
#             echo "$PATH" >> $GITHUB_PATH
          
#         - name: Launch MATLAB
#           uses: matlab-actions/run-command@v1
#           with:
#            command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.GenerateSimulinkWebView|sl_model_file|ProcessAdvisorExample|02_Models/InnerLoop_Control/specification/InnerLoop_Control.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
#            startup-options: -nodesktop -logfile output.log
           
#         - name: Upload artifacts
#           uses: actions/upload-artifact@v2
#           with:
#            name: InnerLoop_Control
#            path: |
#             04_Results/InnerLoop_Control/webview
#             derived/artifacts.dmr 
           
           
#   IL_Detect_Design_Errors: 
#     runs-on: Linux
#     needs: IL_Generate_Simulink_Web_View
#     if: ${{ always() }}
#     steps:
#         - name: Checkout repository
#           uses: actions/checkout@v2
#         - name: Download Artifacts
#           uses: actions/download-artifact@v2    
#           with:
#            name: InnerLoop_Control     
#         - name: Run the matlab version
#           run: |
#             export PATH="$PATH_TO_MATLAB:$PATH"
#             echo "$PATH" >> $GITHUB_PATH
          
#         - name: Launch MATLAB
#           uses: matlab-actions/run-command@v1
#           with:
#            command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.DetectDesignErrors|sl_model_file|ProcessAdvisorExample|02_Models/InnerLoop_Control/specification/InnerLoop_Control.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
#            startup-options: -nodesktop -logfile output.log  
           
#         - name: Upload artifacts
#           uses: actions/upload-artifact@v2
#           with:
#            name: InnerLoop_Control
#            path: |
#             04_Results/InnerLoop_Control/design_error_detections
#             derived/artifacts.dmr   

#   IL_Generate_SDD_Report:
#     runs-on: Linux
#     needs: IL_Detect_Design_Errors
#     if: ${{ always() }}
#     steps:
#         - name: Checkout repository
#           uses: actions/checkout@v2
#         - name: Download Artifacts
#           uses: actions/download-artifact@v2    
#           with:
#            name: InnerLoop_Control     
          
#         - name: Run the matlab version
#           run: |
#             export PATH="$PATH_TO_MATLAB:$PATH"
#             echo "$PATH" >> $GITHUB_PATH
          
#         - name: Launch MATLAB
#           uses: matlab-actions/run-command@v1
#           with:
#            command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.GenerateSDDReport|sl_model_file|ProcessAdvisorExample|02_Models/InnerLoop_Control/specification/InnerLoop_Control.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
#            startup-options: -nodesktop -logfile output.log
#         - name: Upload artifacts
#           uses: actions/upload-artifact@v2
#           with:
#            name: InnerLoop_Control
#            path: |
#             04_Results/InnerLoop_Control/system_design_description
#             derived/artifacts.dmr   

           
#   IL_Generate_Code: 
#     runs-on: Linux
#     needs: IL_Generate_SDD_Report
#     if: ${{ always() }}
#     steps:
#         - name: Checkout repository
#           uses: actions/checkout@v2
#         - name: Download Artifacts
#           uses: actions/download-artifact@v2    
#           with:
#            name: InnerLoop_Control    
#         - name: Run the matlab version
#           run: |
#             export PATH="$PATH_TO_MATLAB:$PATH"
#             echo "$PATH" >> $GITHUB_PATH
          
#         - name: Launch MATLAB
#           uses: matlab-actions/run-command@v1
#           with:
#            command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.GenerateCode|sl_model_file|ProcessAdvisorExample|02_Models/InnerLoop_Control/specification/InnerLoop_Control.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
#            startup-options: -nodesktop -logfile output.log
           
#         - name: Upload artifacts
#           uses: actions/upload-artifact@v2
#           with:
#            name: InnerLoop_Control
#            path: |
#             03_Code
#             derived/artifacts.dmr    


#   IL_Check_Coding_Standards:
#     runs-on: Linux
#     needs: IL_Generate_Code
#     if: ${{ always() }}
#     steps:
#         - name: Checkout repository
#           uses: actions/checkout@v2
#         - name: Download Artifacts
#           uses: actions/download-artifact@v2    
#           with:
#            name: InnerLoop_Control
#         - name: Run the matlab version
#           run: |
#             export PATH="$PATH_TO_MATLAB:$PATH"
#             echo "$PATH" >> $GITHUB_PATH
          
#         - name: Launch MATLAB
#           uses: matlab-actions/run-command@v1
#           with:
#            command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.AnalyzeModelCode|sl_model_file|ProcessAdvisorExample|02_Models/InnerLoop_Control/specification/InnerLoop_Control.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
#            startup-options: -nodesktop -logfile output.log   
#         - name: Upload artifacts
#           uses: actions/upload-artifact@v2
#           with:
#            name: InnerLoop_Control
#            path: |
#             04_Results/InnerLoop_Control/coding_standards
#             derived/artifacts.dmr 
            
#   IL_Inspect_Code:
#     runs-on: Linux
#     needs: IL_Check_Coding_Standards
#     if: ${{ always() }}
#     steps:
#         - name: Checkout repository
#           uses: actions/checkout@v2
          
#         - name: Download Artifacts
#           uses: actions/download-artifact@v2    
#           with:
#            name: InnerLoop_Control   
#         - name: Run the matlab version
#           run: |
#             export PATH="$PATH_TO_MATLAB:$PATH"
#             echo "$PATH" >> $GITHUB_PATH
          
#         - name: Launch MATLAB
#           uses: matlab-actions/run-command@v1
#           with:
#            command: "openProject(pwd);runprocess(Tasks = {'padv.builtin.task.RunCodeInspection|sl_model_file|ProcessAdvisorExample|02_Models/InnerLoop_Control/specification/InnerLoop_Control.slx'}, Force=false,ExitInBatchMode = true, RerunFailedTasks = false,RerunErroredTasks = false,GenerateJUnitForProcess = true);"
#            startup-options: -nodesktop -logfile output.log    
#         - name: Upload artifacts
#           uses: actions/upload-artifact@v2
#           with:
#            name: InnerLoop_Control
#            path: |
#             04_Results/InnerLoop_Control/code_inspection
#             derived/artifacts.dmr   
           
#   IL_Generate_PADV_Report:
#     runs-on: Linux
#     needs: IL_Inspect_Code
#     if: ${{ always() }}
#     steps:
#         - name: Checkout repository
#           uses: actions/checkout@v2
          
#         - name: Download Artifacts
#           uses: actions/download-artifact@v2    
#           with:
#            name: InnerLoop_Control    
#         - name: Run the matlab version
#           run: |
#             export PATH="$PATH_TO_MATLAB:$PATH"
#             echo "$PATH" >> $GITHUB_PATH
          
#         - name: Launch MATLAB
#           uses: matlab-actions/run-command@v1
#           with:
#            command: "openProject(pwd);rptObj=padv.ProcessAdvisorReportGenerator(Format='pdf', OutputPath='$PROJECTROOT$/ProcessAdvisorReport');rptObj.generateReport();"
#            startup-options: -nodesktop -logfile output.log  
           
#   IL_Collect_Artifacts:
#     runs-on: Linux
#     needs: IL_Generate_PADV_Report
#     if: ${{ always() }}
#     steps:
#         - name: Checkout repository
#           uses: actions/checkout@v2
#         - name: Download Artifacts
#           uses: actions/download-artifact@v2    
#           with:
#            name: InnerLoop_Control    
#         - name: Run the matlab version
#           run: |
#             export PATH="$PATH_TO_MATLAB:$PATH"
#             echo "$PATH" >> $GITHUB_PATH
          
#         - name: Launch MATLAB
#           uses: matlab-actions/run-command@v1
#           with:
#            command: "openProject(pwd); zippedFiles = padv.zipBuildArtifacts({'03_Code', '04_Results/InnerLoop_Control/code_inspection', '04_Results/InnerLoop_Control/coding_standards', '04_Results/InnerLoop_Control/design_error_detections', '04_Results/InnerLoop_Control/model_standards_results', '04_Results/InnerLoop_Control/system_design_description', '04_Results/InnerLoop_Control/webview', 'ProcessAdvisorReport.pdf'},'IL_padv_artifacts.zip');" 
#            startup-options: -nodesktop -logfile output.log  
           
#         - name: Upload artifacts
#           uses: actions/upload-artifact@v2
#           with:
#            name: IL_padv_artifacts
#            path: |
#              IL_padv_artifacts.zip
